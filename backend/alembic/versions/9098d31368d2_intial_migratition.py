"""Intial migratition

Revision ID: 9098d31368d2
Revises: 
Create Date: 2025-07-17 10:02:34.987890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9098d31368d2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accessories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learnings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('tldr', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('learning_xp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('habit', sa.Boolean(), nullable=False),
    sa.Column('day_create_habit', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('xp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', postgresql.BYTEA(), nullable=False),
    sa.Column('started', sa.Date(), nullable=False),
    sa.Column('last_completed', sa.Date(), nullable=True),
    sa.Column('last_streak_update', sa.Date(), nullable=True),
    sa.Column('streak', sa.Integer(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('learning_xp', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('pot', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('refresh_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('refresh_token', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', postgresql.CIDR(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_completed_learnings',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('learning_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_id'], ['learnings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'learning_id')
    )
    op.create_table('user_habits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('habit_created', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_completed_tasks',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'task_id')
    )
    op.create_table('companion_accessories',
    sa.Column('companion_id', sa.Integer(), nullable=False),
    sa.Column('accessories_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accessories_id'], ['accessories.id'], ),
    sa.ForeignKeyConstraint(['companion_id'], ['companions.id'], ),
    sa.PrimaryKeyConstraint('companion_id', 'accessories_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('companion_accessories')
    op.drop_table('users_completed_tasks')
    op.drop_table('user_habits')
    op.drop_table('user_completed_learnings')
    op.drop_table('refresh_sessions')
    op.drop_table('companions')
    op.drop_table('users')
    op.drop_table('tasks')
    op.drop_table('learnings')
    op.drop_table('accessories')
    # ### end Alembic commands ###
